{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport numelDimension from '@stdlib/ndarray-base-numel-dimension';\nimport getStride from '@stdlib/ndarray-base-stride';\nimport getOffset from '@stdlib/ndarray-base-offset';\nimport getData from '@stdlib/ndarray-base-data-buffer';\nimport ndarraylike2scalar from '@stdlib/ndarray-base-ndarraylike2scalar';\nimport { ndarray as strided } from '@stdlib/stats-strided-dcovarmtk';\n\n\n// MAIN //\n\n/**\n* Computes the covariance of two one-dimensional double-precision floating-point ndarrays provided known means and using a one-pass textbook algorithm.\n*\n* ## Notes\n*\n* -   The function expects the following ndarrays in order:\n*\n*     -   first one-dimensional input ndarray.\n*     -   second one-dimensional input ndarray.\n*     -   a zero-dimensional ndarray specifying the degrees of freedom adjustment. Setting this parameter to a value other than `0` has the effect of adjusting the divisor during the calculation of the covariance according to `N-c` where `c` corresponds to the provided degrees of freedom adjustment and `N` corresponds to the number of elements in each input ndarray. When computing the population covariance, setting this parameter to `0` is the standard choice (i.e., the provided arrays contain data constituting entire populations). When computing the unbiased sample covariance, setting this parameter to `1` is the standard choice (i.e., the provided arrays contain data sampled from larger populations; this is commonly referred to as Bessel's correction).\n*     -   a zero-dimensional ndarray specifying the mean of the first one-dimensional ndarray.\n*     -   a zero-dimensional ndarray specifying the mean of the second one-dimensional ndarray.\n*\n* @param {ArrayLikeObject<Object>} arrays - array-like object containing input ndarrays\n* @returns {number} covariance\n*\n* @example\n* import Float64Array from '@stdlib/array-float64';\n* import scalar2ndarray from '@stdlib/ndarray-from-scalar';\n* import ndarray from '@stdlib/ndarray-base-ctor';\n*\n* var opts = {\n*     'dtype': 'float64'\n* };\n*\n* var xbuf = new Float64Array( [ 1.0, -2.0, 2.0 ] );\n* var x = new ndarray( opts.dtype, xbuf, [ 3 ], [ 1 ], 0, 'row-major' );\n*\n* var ybuf = new Float64Array( [ 2.0, -2.0, 1.0 ] );\n* var y = new ndarray( opts.dtype, ybuf, [ 3 ], [ 1 ], 0, 'row-major' );\n*\n* var correction = scalar2ndarray( 1.0, opts );\n* var meanx = scalar2ndarray( 1.0/3.0, opts );\n* var meany = scalar2ndarray( 1.0/3.0, opts );\n*\n* var v = dcovarmtk( [ x, y, correction, meanx, meany ] );\n* // returns ~3.8333\n*/\nfunction dcovarmtk( arrays ) {\n\tvar correction;\n\tvar meanx;\n\tvar meany;\n\tvar x;\n\tvar y;\n\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\n\tcorrection = ndarraylike2scalar( arrays[ 2 ] );\n\tmeanx = ndarraylike2scalar( arrays[ 3 ] );\n\tmeany = ndarraylike2scalar( arrays[ 4 ] );\n\n\treturn strided( numelDimension( x, 0 ), correction, meanx, getData( x ), getStride( x, 0 ), getOffset( x ), meany, getData( y ), getStride( y, 0 ), getOffset( y ) ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default dcovarmtk;\n"],"names":["dcovarmtk","arrays","correction","meanx","meany","x","y","ndarraylike2scalar","strided","numelDimension","getData","getStride","getOffset"],"mappings":";;+kBAsEA,SAASA,EAAWC,GACnB,IAAIC,EACAC,EACAC,EACAC,EACAC,EASJ,OAPAD,EAAIJ,EAAQ,GACZK,EAAIL,EAAQ,GAEZC,EAAaK,EAAoBN,EAAQ,IACzCE,EAAQI,EAAoBN,EAAQ,IACpCG,EAAQG,EAAoBN,EAAQ,IAE7BO,EAASC,EAAgBJ,EAAG,GAAKH,EAAYC,EAAOO,EAASL,GAAKM,EAAWN,EAAG,GAAKO,EAAWP,GAAKD,EAAOM,EAASJ,GAAKK,EAAWL,EAAG,GAAKM,EAAWN,GAChK"}